# Currency Conversion API - Environment Variables Example
# Copy this file to .env and set your actual values

# JWT Authentication Configuration
# Generate a secure secret key for JWT token signing/verification
# Use a strong, random string of at least 32 characters in production
JWT_SECRET_KEY=your-jwt-secret-key-here-minimum-32-characters-for-security

# JWT Configuration
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=60

# Database Configuration
# For local development (default)
DATABASE_URL=sqlite:///./currency_demo.db

# For production with PostgreSQL (local)
# DATABASE_URL=postgresql://currency_user:currency_pass@localhost:5432/currency_db

# For production with PostgreSQL (Docker)
# DATABASE_URL=postgresql://currency_user:currency_pass@postgres:5432/currency_db

# API Configuration
API_HOST=0.0.0.0
API_PORT=8000

# Monitoring & Tracing Configuration (for Docker deployment)
# JAEGER_ENDPOINT=http://jaeger:4317
# OTEL_SERVICE_NAME=currency-api

# Grafana Configuration
GF_SECURITY_ADMIN_USER=admin
GF_SECURITY_ADMIN_PASSWORD=admin

# PagerDuty Integration for Monitoring & Alerting (Optional)
# Get these keys from your PagerDuty service integrations:
# 1. Go to PagerDuty > Services > Your Service > Integrations
# 2. Add integration > Events API v2
# 3. Copy the Integration Key
PAGERDUTY_CURRENCY_APP_KEY=your-pagerduty-integration-key-here

# Development/Debug Settings
# PYTHONPATH=.
# UVICORN_RELOAD=true
